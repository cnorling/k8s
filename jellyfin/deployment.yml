apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
    spec:
      containers:
        - image: jellyfin/jellyfin:latest
          imagePullPolicy: Always
          name: jellyfin
          volumeMounts:
            - name: jellyfin-cache
              mountPath: /cache
            # - name: jellyfin-config
            #   mountPath: /config
            - name: jellyfin-media
              mountPath: /media
      restartPolicy: Always
      volumes:
        - name: jellyfin-cache
          persistentVolumeClaim:
            claimName: jellyfin-cache
        # - name: jellyfin-config
        #   configMap:
        #     name: jellyfin-config
        #     items:
        #       - key: jellyfinconfig
        #         path: jellyfinconfig
        - name: jellyfin-media
          persistentVolumeClaim:
            claimName: jellyfin-media
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jellyfin-config
  namespace: jellyfin
data:
  jellyfinconfig: |
    key: value
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: jellyfin-cache
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jellyfin
  name: jellyfin-media
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn
  volumeMode: Filesystem
